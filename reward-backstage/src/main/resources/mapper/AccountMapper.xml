<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjf.java.dao.AccountMapper">
  <resultMap id="BaseResultMap" type="com.cjf.java.entity.AccountEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="account_type" jdbcType="TINYINT" property="accountType" />
    <result column="account_status" jdbcType="TINYINT" property="accountStatus" />
    <result column="input_time" jdbcType="BIGINT" property="inputTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, account_name, password, account_type, account_status, input_time, update_time
  </sql>
  <select id="getAccountByOldPasswrod" parameterType="com.cjf.java.api.dto.AccountDto" resultMap="BaseResultMap">
	select 
	<include refid="Base_Column_List"/>
	from 
	t_account t where t.account_name = #{accountName,jdbcType=VARCHAR} 
	AND t.`password` = #{oldPassword,jdbcType=VARCHAR}
  </select>
  <update id="updateAccount" parameterType="com.cjf.java.entity.AccountEntity">
	update t_account 
	<set>
		<if test="accountName != null">
			account_name = #{accountName},
		</if>
		<if test="password != null">
			`password` = #{password} ,
		</if>
		<if test="accountType != null">
			account_type = #{accountType},
		</if>
		<if test="accountStatus != null">
			account_status = #{accountStatus},
		</if>
		<if test="inputTime != null">
			input_time = #{inputTime},
		</if>
		<if test="updateTime != null">
			update_time = #{updateTime}
		</if>
	</set>
	where account_name = #{accountName}
  </update>
  <insert id="add" parameterType="com.cjf.java.entity.AccountEntity">
		insert into t_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="accountName != null">
				account_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="accountType">
				account_type,
			</if>
			<if test="accountStatus != null">
				account_status,
			</if>
			<if test="inputTime != null">
				input_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values(" suffix=")" suffixOverrides=",">
			<if test="accountName != null">
				#{accountName},
			</if>
			<if test="password != null">
				#{password},
			</if>
			<if test="accountType != null">
				#{accountType},
			</if>
			<if test="accountStatus != null">
				#{accountStatus},
			</if>
			<if test="inputTime != null">
				#{inputTime},
			</if>
			<if test="updateTime != null">
				#{updateTime},
			</if>
		</trim>
  </insert>
  
  <delete id="delete" parameterType="java.lang.Integer">
  		delete from t_account where id = #{id}
  </delete>
  
  <select id="getAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from
		t_account t where t.account_name = #{accountName,jdbcType=VARCHAR}
		AND t.`password` = #{password,jdbcType=VARCHAR}
  </select>
  
  <select id="getAccounts" parameterType="java.util.Map" resultMap="BaseResultMap">
  		select 
  			<include refid="Base_Column_List"/>
  		 from t_account 
  		 limit #{offset},#{rows}
  </select>
  
  <select id="getAccountsByIds" parameterType="java.util.List" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List"/>
		from t_account
		where 1=1
		<if test="ids != null">
			and id in
			<foreach collection="ids" item="id" separator="," close=")" open="(">
				#{id}
			</foreach>
		</if>
  </select>
</mapper>